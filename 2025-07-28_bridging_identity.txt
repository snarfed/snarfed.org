55295
Bridging identity with links

One of the most common questions we get here is, "can you help me connect all my different accounts?" You may be on Bluesky, and Instagram, and Mastodon; you may make a video series on YouTube; you may have a blog, and maybe post on Reddit, and once a while back you set up a Linktree to connect them all. Half of them are inactive, the other half you end up copy and pasting between. At least once a day, you open a notification on one account, only to end up pointing someone to a _different_ account of yours.

There must be a better way, right?

Maybe! We hope so. It's a big, fuzzy problem, with lots of different needs and problems to solve. [We ran a session](https://fediforum.org/2025-06/session/7-b/) at [FediForum back in June](https://fediforum.org/2025-06/) and came away with a great set of draft user stories and future directions. Today, though, we want to focus on one technique we've been using in [Bridgy Fed](https://fed.brid.gy/) and [Bounce](https://blog.anew.social/bounce-a-cross-protocol-migration-tool/) with a handful of partners: _account links_.

Often, when people think about consolidating their identities online, they think top-down. If the problem is too many different accounts, the obvious solution is to make a new, meta account that knows about all the rest and connects them together, right?

It's a good thought! FriendFeed, Plaxo, Linktree, HootSuite, and countless other [social network aggregators](https://en.wikipedia.org/wiki/Social_network_aggregation) have taken a swing at exactly this over the years, many still to this day.

The catch is, this just crowns a new central authority, with control over everyone's accounts, that everyone has to use. It might work, but here in the open social web, we're looking for something less centralized. With apologies to [David Clark](https://en.wikiquote.org/wiki/David_D._Clark#Sourced) and the [IETF](https://www.ietf.org/): _We reject kings, presidents, and voting. We believe in rough consensus and running code._

<p class="right half">
  <a href="https://xkcd.com/927/">
    <img class="shadow" src="https://imgs.xkcd.com/comics/standards.png"></a>
</p>

Often, the next thought is to take this meta account and turn it into a new open standard. A noble, worthy idea! WebFinger, DIDs, OpenID, PGP keyservers, and many others had the same idea. Enter [XKCD 927](https://xkcd.com/927/).

So if thinking top down can lead to over-centralization and over-standardization, Anuj and I wondered about the other direction. What's the smallest thing we could do, bottom up, without introducing another central authority or new standard? We immediately thought of profile links. Many social networks let you include links in your profile: your web site, Linktree, Patreon, etc. These are primarily aimed at human users, but we knew that there are also machine-readable corollaries for these links: places in the underlying data where we can _link to other accounts_, on other networks. The web has [`rel=me`](https://microformats.org/wiki/rel-me), the fediverse (ActivityPub) has [`alsoKnownAs`](https://www.w3.org/ns/activitystreams#did-core), Bluesky (AT Protocol) also uses [`alsoKnownAs`](https://www.w3.org/TR/did-1.0/#dfn-alsoknownas), and Nostr has [NIP-39](https://nips.nostr.com/39). (We're not sure about Farcaster yet. If you know how, [please let us know](mailto:letsbuild@anew.social)!)

Let's look at an example. [Anuj](https://quillmatiq.com/) is [@quillmatiq@pixelfed.social](https://pixelfed.social/quillmatiq) on Pixelfed. That account is [bridged to Bluesky](https://bsky.app/profile/quillmatiq.pixelfed.social.ap.brid.gy) by Bridgy Fed, which _publishes an account link_ back to the Pixelfed account in [its DID document](https://web.plc.directory/did/did:plc:3qp6hiiqwuzasese2vtex6xl):

```json
  "alsoKnownAs": [
    "at://pixels.quillmatiq.com",
    "https://pixelfed.social/users/quillmatiq"
  ]
```

The second element there, <code>https://pixelfed.social/users/quillmatiq</code>, is the Pixelfed account's ActivityPub actor id. The bridged Bluesky account is _publishing an account link_ back to its original source account. Any Bluesky client or app can read this DID document, fetch <code>https://pixelfed.social/users/quillmatiq</code>, see that it has a `link rel=alternate type=application/activity+json`, and use that to find the Pixelfed account.

Any Bluesky client can use this to link to external accounts in its UI. Here's an example mockup based on bsky.app; note the Pixelfed logo and linked handle:

<a href="/bsky-pixelfed-quillmatiq-link.png">
  <img class="shadow" src="/bsky-pixelfed-quillmatiq-link.png"></a>

This works both directions. [Anuj's Bluesky account](https://bsky.app/profile/quillmatiq.com) is bridged to the fediverse, and [its bridged ActivityPub actor](https://browser.pub/@quillmatiq.com@bsky.brid.gy) includes this:

```json
"alsoKnownAs": ["at://did:plc:xgvzy7ni6ig6ievcbls5jaxe"]
```

Fediverse clients and apps can resolve and fetch that DID document ([`did:plc:xgvzy7ni6ig6ievcbls5jaxe`](https://web.plc.directory/did/did:plc:xgvzy7ni6ig6ievcbls5jaxe)), see that it's an AT Protocol account, and [link users to its Bluesky profile](https://bsky.app/profile/quillmatiq.com). Bridgy Fed even already includes that user-visible link! Clients just need to match it to `alsoKnownAs`, detect that it's a Bluesky account, and show a visible indicator. Here's an example mockup, based on Mastodon's web UI:

<!-- <a href="/mastodon-bsky-quillmatiq-orig.png"> -->
<!--   <img class="shadow half-sidebyside" src="/mastodon-bsky-quillmatiq-orig.png"></a> -->
<a href="/mastodon-bsky-quillmatiq-link.png">
  <img class="shadow" src="/mastodon-bsky-quillmatiq-link.png"></a>

The other useful thing to do with these links is bidirectional verification. Anyone can _claim_ that they're a given Mastodon or Bluesky account; so you only really want to trust them if that account confirms it. We do this by publishing links in both directions, from each account to the other. Clients can then check both sides to verify that the two accounts really are the same person.

For example, this web site is bridged into the fediverse as ActivityPub actor id [`https://fed.brid.gy/snarfed.org`](https://browser.pub/https://fed.brid.gy/snarfed.org). Bridgy Fed includes this site's home page in that actor's `alsoKnownAs`:

```json
  "alsoKnownAs": ["https://snarfed.org/"]
```

...and I link back to that actor id with a `rel="me"` link on [`https://snarfed.org/`](https://snarfed.org/):

```html
<a rel="me" href="https://fed.brid.gy/snarfed.org"></a>
```

When clients see my fediverse actor and its `alsoKnownAs`, they can fetch it, look for the `rel="me"` link, see that it points back to the actor, and confirm that this site and that fediverse account are legitimately the same person. Likewise, if they start from this web site, they can look for the `rel="me"` link and do the same check.

<a href="/mastodon-rel-me-checks-gargron.png">
  <img class="shadow" src="/mastodon-rel-me-checks-gargron.png"></a>

Mastodon already does this! If you add a profile link to your web site, and then link from your web site back to your Mastodon profile with `rel="me"`, [Mastodon shows that link with a green check](https://docs.joinmastodon.org/user/profile/#verification). Account links in the wild! We love to see it.

There's lots more to talk about here. [You can do this with posts](https://fed.brid.gy/docs#identify-bridged-post), and many other interactions, as well as with accounts. You can use this to build an identity aggregator that detects and sets up all of your accounts for you. Multi-protocol clients can use this to automatically show the native version of every account and post, regardless of where you discovered it. And so on.

But for now, we want to propose account links as one modest, bottom-up starting point for handling our myriad identities online. They don't solve all problems. They're not a grand vision. But they do help decentralized social networks say, hey, this person here, they're also that one over there. And apps on those networks can use account links to surface those connections to users. We think that could be useful.

(If you're a developer, and this piques your interest, [check out the Bridgy Fed docs for more details](https://fed.brid.gy/docs#api), and [feel free to reach out to us](mailto:letsbuild@anew.social), we'd love to work with you!)
