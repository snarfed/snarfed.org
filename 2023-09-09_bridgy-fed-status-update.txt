50894
Bridgy Fed status update

Since [our last episode](/2023-08-22_bridgy-fed-status-update-4), I've implemented the [client side of ATProto federation in Bridgy Fed](https://github.com/snarfed/bridgy-fed/blob/main/atproto.py). I'm now creating [new `did:plc`s](https://github.com/snarfed/arroba/blob/main/arroba/did.py#L189), [inter-service JWTs](https://github.com/snarfed/arroba/blob/b4754bd6519cbc3ab5a6cd2a09798da7245a5f31/arroba/util.py#L295-L319), and repos on the fly, converting posts to ATProto records, and committing them. I also stood up a [serialized hub for serving those local ATProto commits to `subscribeRepos` subscribers](https://github.com/snarfed/bridgy-fed/issues/630), along with a task queue to propagate them there.

The end result is that I now have a one way, end to end pipeline to receive web and ActivityPub posts and federate them all the way to an ATProto BGS. I've tested locally, and it's working. I'm looking forward to testing against the sandbox!

Next is the other direction. [There isn't yet a subscription XRPC for notifications](https://github.com/bluesky-social/atproto/discussions/1538), so I need to build a dedicated process to poll `listNotifications` on the AppView. Sigh, ok.

Oh, and I threw together [a fun comparison chart of IndieWeb, ActivityPub, ATProto, and Nostr](https://fed.brid.gy/docs#compare).

[Previously](/2023-08-22_bridgy-fed-status-update-4), [previously](/2023-08-04_bridgy-fed-status-update-3), [previously](/2023-07-11_bridgy-fed-status-update-2), [previously](/2023-06-29_bridgy-fed-status-update).
